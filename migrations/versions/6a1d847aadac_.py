"""empty message

Revision ID: 6a1d847aadac
Revises: 
Create Date: 2025-02-11 00:58:55.152017

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6a1d847aadac'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('business_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('business_name', sa.String(length=150), nullable=False),
    sa.Column('license_number', sa.String(length=100), nullable=True),
    sa.Column('industry', sa.String(length=100), nullable=False),
    sa.Column('tax_id', sa.String(length=50), nullable=False),
    sa.Column('tax_status', sa.String(length=50), nullable=False),
    sa.Column('compliance_docs', sa.String(length=255), nullable=True),
    sa.Column('business_phone', sa.String(length=20), nullable=True),
    sa.Column('business_email', sa.String(length=150), nullable=True),
    sa.Column('registered_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('license_number'),
    sa.UniqueConstraint('tax_id')
    )
    op.create_table('dm_cache',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(length=2), nullable=False),
    sa.Column('de_minimis_value', sa.Float(), nullable=True),
    sa.Column('de_minimis_currency', sa.String(length=3), nullable=True),
    sa.Column('vat_amount', sa.Float(), nullable=True),
    sa.Column('vat_currency', sa.String(length=3), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('country')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('street', sa.String(length=125), nullable=False),
    sa.Column('city', sa.String(length=85), nullable=False),
    sa.Column('region', sa.String(length=85), nullable=False),
    sa.Column('country', sa.String(length=85), nullable=False),
    sa.Column('zipcode', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cart',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('transaction_id', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_id')
    )
    op.create_table('seller',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('storefront',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('business_info_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['business_info_id'], ['business_info.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('business_info_id')
    )
    op.create_table('order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('shipping_address_id', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], ),
    sa.ForeignKeyConstraint(['shipping_address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('payment_id')
    )
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('storefront_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('price', sa.Numeric(precision=6, scale=2), nullable=False),
    sa.Column('stock', sa.Integer(), nullable=False),
    sa.Column('hs_code', sa.String(length=20), nullable=False),
    sa.Column('restricted', sa.Boolean(), nullable=False),
    sa.Column('restriction_reason', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['storefront_id'], ['storefront.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_storefront',
    sa.Column('seller_id', sa.Integer(), nullable=False),
    sa.Column('storefront_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['seller_id'], ['seller.user_id'], ),
    sa.ForeignKeyConstraint(['storefront_id'], ['storefront.id'], ),
    sa.PrimaryKeyConstraint('seller_id', 'storefront_id')
    )
    op.create_table('cart_product',
    sa.Column('cart_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cart_id'], ['cart.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('cart_id', 'product_id')
    )
    op.create_table('order_product',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('export_tax', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('order_id', 'product_id')
    )
    op.create_table('payout',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('transaction_id', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_id'),
    sa.UniqueConstraint('payment_id'),
    sa.UniqueConstraint('transaction_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payout')
    op.drop_table('order_product')
    op.drop_table('cart_product')
    op.drop_table('user_storefront')
    op.drop_table('product')
    op.drop_table('order')
    op.drop_table('storefront')
    op.drop_table('seller')
    op.drop_table('payment')
    op.drop_table('cart')
    op.drop_table('address')
    op.drop_table('user')
    op.drop_table('dm_cache')
    op.drop_table('business_info')
    # ### end Alembic commands ###
